VOCABULARY
1.SELF JOIN
2.HIERARCHICAL QUERY
3.LEVEL
4.START WITH
5.CONNECT BY

TRY IT/SOLVE IT
1.SELECT emp.last_name AS "Employee", emp.employee_id AS "Emp#", mgr.last_name AS "Manager", mgr.employee_Id AS "Mgr#"
FROM  employees emp LEFT OUTER JOIN  employees  mgr  ON emp.manager_id  = mgr.employee_Id

2.
SELECT emp.last_name AS "Employee", emp.employee_id AS "Emp#", mgr.last_name AS "Manager", mgr.employee_Id AS "Mgr#"
FROM  employees emp LEFT OUTER JOIN  employees  mgr  ON emp.manager_id  = mgr.employee_Id
ORDER BY  "Employee"

3.
SELECT emp.last_name AS "Employee",  emp.hire_date AS "Emp Hired",   mgr.last_name AS "Manager", mgr.hire_date AS "Mgr Hired"
FROM  employees emp LEFT OUTER JOIN  employees  mgr  ON emp.manager_id  = mgr.employee_Id
WHERE emp.hire_date < NVL( mgr.hire_date, TO_DATE('31.12.9999 23:59:59', 'dd.mm.yyyy hh24:mi:ss'))
ORDER BY  "Employee"

4.
SELECT last_name, salary, department_id
FROM employees
START WITH first_name = 'Lex'  AND last_name = 'De Haan'
CONNECT BY PRIOR employee_id = manager_id

5.


6.
SELECT LPAD(last_name, LENGTH(last_name) + (LEVEL)*2, '-') "organization chart "
FROM employees
START WITH last_name = ( SELECT last_name from employees WHERE manager_id IS NULL)
CONNECT BY PRIOR employee_id = manager_id

7.
SELECT LPAD(last_name, LENGTH(last_name) + (LEVEL-1)*2, '-') "organization chart "
FROM employees
START WITH last_name = ( SELECT last_name from employees WHERE manager_id IS NULL)
CONNECT BY PRIOR employee_id = manager_id AND last_name != 'De Haan'


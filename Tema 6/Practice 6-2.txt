Practice 6-2

Vocabulary;
-Collection
-INDEX BY table
-INDEB BY table of records

Try it/Solve it
1.
A. O colecție este un set de date similare salvate ca variabile
B.a,c;
C.Un tabel INDEX BY are obligatorie o cheie primară care este de obicei o Binary_intege
D.INDEX BY table este o colectie de variabile de acelasi fel,iar INDEX BY table of records
este o colectie de records,tip de data compusa.
E.Este INDEX BY table of records

2.A.
DECLARE 
 TYPE t_country_names IS 
 TABLE OF wf_countries.country_name%TYPE 
 INDEX BY BINARY_INTEGER;
 v_country_names t_country_names; 
 CURSOR country_curs IS 
 SELECT country_id, country_name 
 FROM wf_countries 
 WHERE region_id = 5 
 ORDER BY country_id; 
 v_country_rec country_curs%ROWTYPE; 
BEGIN 
 OPEN country_curs; LOOP 
 FETCH country_curs INTO v_country_rec; 
 EXIT WHEN country_curs%NOTFOUND; 
 v_country_names(v_country_rec.country_id) := v_country_rec.country_name; 
 END LOOP; 
 CLOSE country_curs; 
END;

B.
DECLARE 
 TYPE t_country_names IS 
 TABLE OF wf_countries.country_name%TYPE 
 INDEX BY BINARY_INTEGER; 
 v_country_names t_country_names; 
 CURSOR country_curs IS 
 SELECT country_id, country_name 
 FROM wf_countries 
 WHERE region_id = 5 
 ORDER BY country_id; 
 v_country_rec country_curs%ROWTYPE; 
 BEGIN OPEN country_curs; 
 LOOP FETCH country_curs INTO v_country_rec; 
 EXIT WHEN country_curs%NOTFOUND; 
 v_country_names(v_country_rec.country_id) := v_country_rec.country_name; 
 END LOOP; 
 CLOSE country_curs; 
 FOR i IN v_country_names.FIRST .. v_country_names.LAST LOOP 
 IF v_country_names.EXISTS(i) THEN 
 DBMS_OUTPUT.PUT_LINE(i || ' ' || v_country_names(i)); 
 END IF; 
 END LOOP; 
END;

c.
DECLARE 
 TYPE t_country_names IS 
 TABLE OF wf_countries.country_name%TYPE 
 INDEX BY BINARY_INTEGER;
 v_country_names t_country_names; 
 CURSOR country_curs IS 
 SELECT country_id, country_name 
 FROM wf_countries 
 WHERE region_id = 5 
 ORDER BY country_id; 
 v_country_rec country_curs%ROWTYPE;  
BEGIN 
 OPEN country_curs; LOOP 
 FETCH country_curs INTO v_country_rec; 
 EXIT WHEN country_curs%NOTFOUND; 
 v_country_names(v_country_rec.country_id) := v_country_rec.country_name; 
 END LOOP; 
 CLOSE country_curs; 
 DBMS_OUTPUT.PUT_LINE(v_country_names.FIRST || ' ' || v_country_names(v_country_names.FIRST)); 
 DBMS_OUTPUT.PUT_LINE(v_country_names.LAST || ' ' || v_country_names(v_country_names.LAST)); 
 DBMS_OUTPUT.PUT_LINE('Number of countries is: ' || v_country_names.COUNT); 
END; 

3.A.
DECLARE 
 CURSOR emp_curs IS 
 SELECT employee_id, last_name, job_id, salary 
 FROM employees 
 ORDER BY employee_id; 
 v_emp_rec emp_curs%ROWTYPE; 
 TYPE t_emp_data IS 
 TABLE OF emp_curs%ROWTYPE 
 INDEX BY BINARY_INTEGER; 
 v_emp_data t_emp_data; 
BEGIN 
 OPEN emp_curs; LOOP 
 FETCH emp_curs  INTO v_emp_rec; 
 EXIT WHEN emp_curs%NOTFOUND; 
 v_emp_data(v_emp_rec.employee_id) := v_emp_rec; 
 END LOOP; 
 CLOSE emp_curs; 
END;

B.
DECLARE 
 CURSOR emp_curs IS 
 SELECT employee_id, last_name, job_id, salary 
 FROM employees 
 ORDER BY employee_id;
 v_emp_rec emp_curs%ROWTYPE; 
 TYPE t_emp_data IS  
 TABLE OF emp_curs%ROWTYPE 
 INDEX BY BINARY_INTEGER; 
 v_emp_data t_emp_data; 
BEGIN 
 OPEN emp_curs; LOOP 
 FETCH emp_curs INTO v_emp_rec; 
 EXIT WHEN emp_curs%NOTFOUND; 
 v_emp_data(v_emp_rec.employee_id) := v_emp_rec; 
 END LOOP; 
 CLOSE emp_curs; 
 FOR i IN v_emp_data.FIRST .. v_emp_data.LAST LOOP  
 IF v_emp_data.EXISTS(i) THEN 
 DBMS_OUTPUT.PUT_LINE(v_emp_data(i).employee_id || ' ' || v_emp_data(i).last_name || ' ' || v_emp_data(i).job_id || ' ' || v_emp_data(i).salary); 
 END IF; 
 END LOOP; 
END;
Practice 5-1

Vocabulary
-explicit cursor
-cursor
-close
-context area
-implicit cursor
-open
-fetch
-active set

Try it/ Solve it
1. 
Cursor implicit - e creat de baza de date cand se intampla unele evenimente
Cursor explicit - este definit de utilizator si poate pastra mai multe linii
2.
un select care returneaza un singur rand
3. 
la returnarea mai multor randuri; atunci cand fiecare rand trebuie solicitat manual
4.
A.
DECLARE
 CURSOR currencies_cur IS 
 SELECT currency_code, currency_name
 FROM wf_currencies
 ORDER BY currency_name;

B.
DECLARE
 CURSOR currencies_cur IS 
 SELECT currency_code, currency_name
 FROM wf_currencies
 ORDER BY currency_name;
BEGIN
 OPEN currencies_cur;
END;

C.
DECLARE
 CURSOR currencies_cur IS 
 SELECT currency_code, currency_name
 FROM wf_currencies
 ORDER BY currency_name;
 v_currency_code wf_currencies.currency_code%TYPE;
 v_currency_name wf_currencies.currency_name%TYPE;
BEGIN
 OPEN currencies_cur;
  FETCH currencies_cur INTO v_currency_code, v_currency_name;
 CLOSE currencies_cur;
END;

D.
DECLARE
 CURSOR currencies_cur IS 
 SELECT currency_code, currency_name
 FROM wf_currencies
 ORDER BY currency_name;
 v_currency_code wf_currencies.currency_code%TYPE;
 v_currency_name wf_currencies.currency_name%TYPE;
BEGIN
 OPEN currencies_cur;
  FETCH currencies_cur INTO v_currency_code, v_currency_name;
  DBMS_OUTPUT.PUT_LINE(v_currency_code || ' ' || v_currency_name);
 CLOSE currencies_cur;
END;

F.
DECLARE
 CURSOR currencies_cur IS 
 SELECT currency_code, currency_name
 FROM wf_currencies
 ORDER BY currency_name;
 v_currency_code wf_currencies.currency_code%TYPE;
 v_currency_name wf_currencies.currency_name%TYPE;
BEGIN
 OPEN currencies_cur;
 LOOP
  FETCH currencies_cur INTO v_currency_code, v_currency_name;
  EXIT WHEN currencies_cur%NOTFOUND;
  DBMS_OUTPUT.PUT_LINE(v_currency_code || ' ' || v_currency_name);
  END LOOP;
 CLOSE currencies_cur;
END;

G.
DECLARE
 CURSOR countries_cur IS 
 SELECT country_name, national_holiday_date, national_holiday_name
 FROM wf_countries
 WHERE region_id = 5 AND national_holiday_date IS NOT NULL;
 v_country_name wf_countries.country_name%TYPE;
 v_national_holiday_date wf_countries.national_holiday_date%TYPE;
 v_national_holiday_name wf_countries.national_holiday_name%TYPE;
BEGIN
 OPEN countries_cur;
 LOOP
  FETCH countries_cur INTO v_country_name, v_national_holiday_date, v_national_holiday_name;
  EXIT WHEN countries_cur%NOTFOUND;
  DBMS_OUTPUT.PUT_LINE(v_country_name || ' ' || v_national_holiday_date || ' ' || v_national_holiday_name);
  END LOOP;
 CLOSE countries_cur;
END;

5. 
Deschideți întotdeauna cursorul înainte de a-l utiliza
Aduce fiecare rând, unul la un moment dat
Închideți întotdeauna cursorul după ce îl utilizați

6.
DECLARE
 v_region_id wf_world_regions.region_id%TYPE;
 v_count NUMBER(2);
 v_region_name wf_world_regions.region_name%TYPE;
 CURSOR regions_cur IS 
 SELECT region_id
 FROM wf_world_regions;
BEGIN
 OPEN regions_cur;
 LOOP
  FETCH regions_cur INTO v_region_id;
  EXIT WHEN regions_cur%NOTFOUND;
    SELECT count(country_id) INTO v_count
    FROM wf_countries 
    WHERE region_id = v_region_id;
   IF v_count >= 10 THEN
    SELECT region_name INTO v_region_name
    FROM wf_world_regions
    WHERE region_id = v_region_id;
   DBMS_OUTPUT.PUT_LINE(v_region_name || ' ' || v_count);
   END IF;
  END LOOP;
 CLOSE regions_cur;
END;
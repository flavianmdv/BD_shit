Practice 5.4

1. 
În loc să folosim mai multe cursoare cu valori diferite, putem folosi același cursor 
prin crearea unui parametru pe care îl putem schimba atunci când deschidem cursorul.

2.
DECLARE
 CURSOR countries_cursor (p_region_id NUMBER) IS
 SELECT country_name, area
 FROM wf_countries
 WHERE region_id = p_region_id;
 v_countries countries_cursor%ROWTYPE;
BEGIN
 OPEN countries_cursor (5);
  LOOP
  FETCH countries_cursor INTO v_countries;
  EXIT WHEN countries_cursor%NOTFOUND;
  DBMS_OUTPUT.PUT_LINE(v_countries.country_name || ' ' || v_countries.area);
  END LOOP;
  CLOSE countries_cursor;
 OPEN countries_cursor (30);
  LOOP
  FETCH countries_cursor INTO v_countries;
  EXIT WHEN countries_cursor%NOTFOUND;
  DBMS_OUTPUT.PUT_LINE(v_countries.country_name || ' ' || v_countries.area);
  END LOOP;
  CLOSE countries_cursor;
END;

3.
DECLARE
 CURSOR countries_cursor (p_region_id NUMBER) IS
 SELECT country_name, area
 FROM wf_countries
 WHERE region_id = p_region_id;
 v_countries countries_cursor%ROWTYPE;
BEGIN
 FOR v_countries IN countries_cursor (5) LOOP
  DBMS_OUTPUT.PUT_LINE(v_countries.country_name || ' ' || v_countries.area);
  END LOOP;
 FOR v_countries IN countries_cursor (30) LOOP
  DBMS_OUTPUT.PUT_LINE(v_countries.country_name || ' ' || v_countries.area);
  END LOOP;
END;

4.
DECLARE
 CURSOR countries_cursor (p_region_id NUMBER, p_area NUMBER) IS
 SELECT country_name, area
 FROM wf_countries
 WHERE region_id = p_region_id AND area > p_area;
 v_countries countries_cursor%ROWTYPE;
BEGIN
 FOR v_countries IN countries_cursor (5, 200000) LOOP
  DBMS_OUTPUT.PUT_LINE(v_countries.country_name || ' ' || v_countries.area);
  END LOOP;
 FOR v_countries IN countries_cursor (5, 10000000) LOOP
  DBMS_OUTPUT.PUT_LINE(v_countries.country_name || ' ' || v_countries.area);
  END LOOP;
END;

5.
DECLARE 
CURSOR cur_countries (p_region_id NUMBER, p_area NUMBER) IS
SELECT country_name, area
FROM wf_countries
WHERE region_id=p_region_id AND area>p_area;
v_country_record cur_countries%ROWTYPE;
BEGIN
OPEN cur_countries(5,200000);
DBMS_OUTPUT.PUT_LINE('Region: ' || 5 || ' Minimum Area: ' || 200000);
LOOP
FETCH cur_countries INTO v_country_record;
EXIT WHEN cur_countries%NOTFOUND;
DBMS_OUTPUT.PUT_LINE(v_country_record.country_name || ' with area ' || v_country_record.area);
END LOOP;
CLOSE cur_countries;
DBMS_OUTPUT.PUT_LINE('**********');
OPEN cur_countries(30,500000);
DBMS_OUTPUT.PUT_LINE('Region: ' || 30 || ' Minimum Area: ' || 500000);
LOOP
FETCH cur_countries INTO v_country_record;
EXIT WHEN cur_countries%NOTFOUND;
DBMS_OUTPUT.PUT_LINE(v_country_record.country_name || ' with area ' || v_country_record.area);
END LOOP;
CLOSE cur_countries;
END;